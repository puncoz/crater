version: "3.8"

networks:
  public:
    name: traefik_web
    external: true
  postgres:
    name: postgres
    external: true
  redis:
    name: redis
    external: true
  webapp:
    name: ${DOCKER_NAME}_webapp
    driver: bridge

services:
  laravel:
    container_name: "${DOCKER_NAME}_laravel"
    build:
      context: ./.devops/docker/laravel
      dockerfile: Dockerfile
      args:
        - PUID=${DOCKER_PUID}
        - PGID=${DOCKER_PGID}
        - DOCKER_USER=laravel
    image: personal/laravel_app
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./:/var/www/html:cached
    expose:
      - "9000"
    tty: true
    environment:
      - "DB_HOST=${DB_HOST}"
      - "DB_PORT=${DB_PORT}"
      - "REDIS_HOST=${REDIS_HOST}"
      - "REDIS_PORT=${REDIS_PORT}"
      - "TZ=Asia/Kathmandu"
    networks:
      - webapp
      - postgres
      - redis

  server:
    container_name: "${DOCKER_NAME}_server"
    build:
      context: ./.devops/docker/server
      dockerfile: Dockerfile
    image: personal/nginx_server
    #    restart: on-failure
    volumes:
      - ./:/var/www/html:cached
      - ./.devops/docker/server/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.devops/docker/server/conf/default.conf:/etc/nginx/sites-available/default.conf:ro
    depends_on:
      - laravel
    networks:
      - webapp
      - public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_web"
      - "traefik.http.routers.${DOCKER_NAME}_http.rule=Host(`${BASE_URL}`)"
      - "traefik.http.services.${DOCKER_NAME}_http.loadbalancer.server.port=80"
      - "traefik.http.services.${DOCKER_NAME}_http.loadbalancer.passhostheader=true"
    environment:
      TZ: 'Asia/Kathmandu'
